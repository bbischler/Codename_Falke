// http://ionicframework.com/docs/theming/
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
::-webkit-scrollbar,
*::-webkit-scrollbar {
  display: none;
}

div.page-header {
  margin: 0;
  padding: 0;
  color: color($colors, fontSec);
  background-color: transparent;
  font-size: medium;
  font-weight: 200;
}

ion-title {
  position: absolute;
  top: 0;
  left: 0;
  padding: 0 90px 1px;
  width: 100%;
  height: 100%;
  text-align: center;
}

ion-content {
  background-image: linear-gradient(160deg, color($colors, background) 20%, color($colors, backgroundSec)) !important;
  // min-height: 500px;
  // min-width: 500px;
}

.scroll-content {
  padding: 0 !important;
}

.fas.fa-circle {
  margin: 0 0.2em 0 0.2em;
  display: block;
  color: color($colors, accent);
}

.fas.fa-circle.closed {
  margin: 0 0.2em 0 0.2em;
  display: block;
  color: color($colors, fontSec);
}

.far.fa-circle {
  margin: 0 0.2em 0 0.2em;
  display: block;
  color: color($colors, accentSec);
}

page-menu {

  .splash {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 999;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: fadeIt 1.5s ease-in-out;
    // background: color($colors, background);
  }

  @keyframes fadeIt {
    0% {
      background: color($colors, background);
    }

    50% {
      background: color($colors, backgroundSec);
    }


    100% {
      background: transparent;
    }
  }

  .pageActive {
    font-weight: 400;
    background-color: color($colors, semiTransparent);
    color: color($colors, accent);
    text-align: center;
  }

  .disabled {
    color: color($colors, fontDisabled) !important;
  }

  .pageTransparent {
    text-align: center;
    font-weight: 200;
    color: color($colors, font);
    background-color: transparent;
  }

  .buttonSide {
    font-size: 4.0vh;
  }
}

.sidemenu {
  height: 5em;
  vertical-align: middle;
  line-height: 5em;
}

.page-header-menu {
  color: color($colors, homebutton);
  text-align: center;
  font-size: 2rem;
  font-weight: 300;
}

ion-header {
  margin-top: 10px;
  margin-bottom: 10px;
}

ion-icon {
  color: color($colors, fontSec);

}

@import url(//fonts.googleapis.com/css?family=Vibur);

.logo b {
  font-weight: 100;
  font-size: 3vh;
  color: color($colors, font);
  text-shadow: 0 0 2px, 0 0 0.5em color($colors, accentSec), 0 0 0.5em color($colors, accentSec2), 0 0 0.1em color($colors, accent), 0 7px 3px #000;
  //text-shadow: 0 -20px 100px, 0 0 2px, 0 0 1em color($colors, accent), 0 0 0.5em color($colors, accent), 0 0 0.1em color($colors, accent), 0 7px 3px #000;
}


.side {
  font-size: 5vh !important;
}

.logo b span {
  animation: blink linear infinite 4s;
}

@keyframes blink {
  78% {
    color: inherit;
    text-shadow: inherit;
  }

  79% {
    color: rgb(128, 128, 128);
  }

  80% {
    color: color($colors, semiTransparent);
    text-shadow: none;
  }

  81% {
    color: inherit;
    text-shadow: inherit;
  }

  82% {
    color: color($colors, semiTransparent);
    text-shadow: none;
  }

  83% {
    color: inherit;
    text-shadow: inherit;
  }

  92% {
    color: rgb(128, 128, 128);
    text-shadow: none;
  }

  92.5% {
    color: inherit;
    text-shadow: inherit;
  }
}







//alert popup design
.radio-checked {
  background-color: color($colors, transparent) !important;
  border-color: color($colors, accent) !important;
}

.alert-wrapper {
  @include border-radius($alert-md-border-radius);
  box-shadow: $alert-md-box-shadow;
  background: color($colors, backgroundAlert) !important;
  color: color($colors, font) !important;
  border: solid 1px color($colors, accentSec2) !important;

}

.alert-button {
  color: color($colors, fontSec) !important;
}

// .alert-button:nth-child(2) {
//   color: color($colors, fontSec) !important;
// }

.alert-button:last-child {
  color: color($colors, accent) !important;
}

.alert-message {
  color: color($colors, fontSec) !important;
}

.item-radio {
  background: transparent;
  color: color($colors, font) !important;
}

[aria-checked=true] .alert-radio-icon {
  background-color: color($colors, accent) !important;
  border: none !important;
}

[aria-checked=true] .alert-radio-inner {
  border-color: color($colors, accentSec) !important;
  background: transparent;
}

.alert-radio-label {
  color: color($colors, font) !important;
}


//buttons design
.button-ios-transparent.activated {
  background: color($colors, btnActivated) !important;
}

.button-md-transparent.activated {
  background: color($colors, btnActivated) !important;
}

.button-ios.activated {
  background: color($colors, btnActivated) !important;
}

.button-md.activated {
  background: color($colors, btnActivated) !important;
}

.item-ios.activated {
  background: color($colors, btnActivated) !important;
}

.item-md.activated {
  background: color($colors, btnActivated) !important;
}


// Toast Design

.playerToast {
  text-align: center;

  .toast-container {
    border: solid 1px color($colors, accentSec2);
  }
}

.playerToastBust {
  text-align: center;

  .toast-container {
    border: solid 1px color($colors, red);
  }
}

.playerToastLeg {
  line-height: 30vw;
  text-align: center;
}

.toast-message {
  color: color($colors, font) !important;
  font-size: 2em;
}

.toast-container {
  background: color($colors, background);
  border: solid 1px color($colors, accentSec2);
}




//toolbar
.toolbar {
  padding: 0 !important;
}

.toolbar-content {
  height: 100%;
}

.ionfooter {
  padding: 0;
}

.footer-grid {
  height: 100%;
}


//home icon
.homeiconcontainer {
  position: absolute;
  height: 70%;
  right: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  align-items: left;
  padding-left: 0.5em;
}

.homeiconitem {
  margin: auto;
  height: 1px;
  background: color($colors, homebutton);
  width: 65%;

}

.homebutton {
  position: relative;
}

.inner {
  width: 40%;
}

// Stats MODAL //

.stats-modal .modal-wrapper {
  background-image: linear-gradient(160deg, color($colors, background) 20%, color($colors, backgroundSec)) !important;
}
